- name: Populate service facts
  ansible.builtin.service_facts:
  register: node_exporter__service_facts

- name: Display Ansible facts
  ansible.builtin.debug:
    msg: "{{ ansible_facts }}"
  when: false

- name: Display Service facts
  ansible.builtin.debug:
    msg: "{{ node_exporter__service_facts }}"
  when: false

- name: OS / Arch  / Distribution check
  ansible.builtin.debug:
    msg: "{{ node_exporter__os }} {{ ansible_architecture }} {{ ansible_distribution }} {{ ansible_distribution_version}}"

- name: Check if OS is supported
  ansible.builtin.fail:
    msg: "Node Exporter installation is not supported on this operating system [{{ node_exporter__os }}]."
  when: node_exporter__should_install and node_exporter__os not in node_exporter__supported_os

- name: Check the installed version of node_exporter
  ansible.builtin.shell: set -o pipefail && node_exporter --version | grep "node_exporter, version" | awk '{print $3}'
  register: node_exporter__version_check
  changed_when: false
  failed_when: false
  when: node_exporter_installed

- name: Display installed node_exporter version
  ansible.builtin.debug:
    msg: "Installed node_exporter version: {{ node_exporter__version_check.stdout }}"
  when: node_exporter_installed

- name: Set node_exporter__should_install to true if the installed version is different from the desired version
  ansible.builtin.set_fact:
    node_exporter__should_install: true
  when: node_exporter_installed and node_exporter__version_check.stdout != node_exporter__version

- name: Create temporary directory for installation files
  ansible.builtin.tempfile:
    state: directory
    prefix: node_exporter_installation
  register: node_exporter__temp_dir
  when: node_exporter__should_install

- name: Download node_exporter binary
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter__version }}/node_exporter-{{ node_exporter__version }}.{{ node_exporter__os }}-{{ node_exporter__architecture }}.tar.gz"
    dest: "{{ node_exporter__temp_dir.path }}/node_exporter.archive"
    mode: "0644"
  when: node_exporter__should_install

- name: Extract node_exporter binary
  ansible.builtin.unarchive:
    src: "{{ node_exporter__temp_dir.path }}/node_exporter.archive"
    dest: "{{ node_exporter__temp_dir.path }}"
    remote_src: true
  when: node_exporter__should_install

- name: Include OS specific tasks
  ansible.builtin.include_tasks: "{{ node_exporter__os }}.yml"
  when: node_exporter__should_install and node_exporter__os in node_exporter__supported_os

- name: Remove temporary directory
  ansible.builtin.file:
    path: node_exporter__temp_dir.path
    state: absent
  when: node_exporter__should_install
